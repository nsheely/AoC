name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_benchmarks:
        description: 'Run benchmarks (true/false)'
        required: true
        default: 'false'

jobs:
  detect-years:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          YEARS=$(ls -d [0-9][0-9][0-9][0-9] | jq -R -s -c 'split("\n")[:-1]')
          echo "matrix=${YEARS}" >> $GITHUB_OUTPUT

  build:
    needs: detect-years
    runs-on: ubuntu-latest
    strategy:
      matrix:
        year: ${{fromJSON(needs.detect-years.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./${{ matrix.year }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.year }}-${{ hashFiles(format('./{0}/Cargo.lock', matrix.year)) }}
      - name: Install Rust Nightly Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview
          override: true
      - name: Build
        run: cargo build --all --verbose

  test:
    needs: [detect-years, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        year: ${{fromJSON(needs.detect-years.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./${{ matrix.year }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.year }}-${{ hashFiles(format('./{0}/Cargo.lock', matrix.year)) }}
      - name: Run tests
        run: cargo test --all --verbose

  lint:
    needs: detect-years
    runs-on: ubuntu-latest
    strategy:
      matrix:
        year: ${{fromJSON(needs.detect-years.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./${{ matrix.year }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.year }}-${{ hashFiles(format('./{0}/Cargo.lock', matrix.year)) }}
      - name: Lint with Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  benchmarks:
    needs: [detect-years, test, lint]
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.run_benchmarks == 'true' }}
    strategy:
      matrix:
        year: ${{fromJSON(needs.detect-years.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./${{ matrix.year }}
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.year }}-${{ hashFiles(format('./{0}/Cargo.lock', matrix.year)) }}
      - name: Run benchmarks
        run: cargo bench | tee benchmark_results-${{ matrix.year }}.txt
      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-results-${{ matrix.year }}
          path: ./${{ matrix.year }}/benchmark_results-${{ matrix.year }}.txt