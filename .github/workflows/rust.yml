name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_benchmarks:
        description: 'Run benchmarks (true/false)'
        required: true
        default: 'false'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./2023
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install Rust Nightly Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview
          override: true
      - name: Build
        run: cargo build --all --verbose

  test:
    needs: build
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./2023
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run tests
        run: cargo test --all --verbose

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./2023
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Lint with Clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  coverage:
    environment: gcp
    needs: [test, lint]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./2023
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust Nightly Toolchain and Components
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: llvm-tools-preview
          override: true
      - name: Install cargo llvm-cov
        run: cargo install cargo-llvm-cov
      - name: Generate coverage data
        run: |
          cargo llvm-cov --workspace --verbose --json --output-dir ./coverage/
      - name: Install Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Upload coverage data to GCS
        run: gsutil cp ./coverage/llvm-cov.json gs://aoc_coverage/coverage-data/

  benchmarks:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.run_benchmarks == 'true' }}
    defaults:
      run:
        working-directory: ./2023
    steps:
      - uses: actions/checkout@v3
      - name: Cache Cargo dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run benchmarks
        run: cargo bench | tee benchmark_results.txt
      - name: Upload Benchmark Results
        uses: actions/upload-artifact@v2
        with:
          name: benchmark-results
          path: ./2023/benchmark_results.txt
